- name: Get the latest release for {{ item.name }}
  ansible.builtin.uri:
    url: "https://api.github.com/repos/{{ item.source.owner }}/{{ item.source.repo }}/releases/latest"
    return_content: yes
  register: github_release

- name: Extract download URL for {{ item.name }}
  ansible.builtin.set_fact:
    package_download_url: >-
      {{
        github_release.json.assets
        | selectattr('name', 'search', item.source.arch ~ '.*\\.' ~ item.source.ext ~ '$')
        | map(attribute='browser_download_url')
        | list
      }}[0]

- name: Ensure repository directory exists
  ansible.builtin.file:
    path: "{{ item.repository.base_path }}/{{ item.repository.name }}"
    state: directory
    recurse: yes
    mode: "{{ item.repository.mode | default('0755') }}"
    owner: "{{ item.repository.owner | default(omit) }}"
    group: "{{ item.repository.group | default(omit) }}"

- name: Set SELinux context for repository path (persistent)
  community.general.sefcontext:
    target: "{{ item.repository.base_path }}/{{ item.repository.name }}(/.*)?"
    setype: httpd_sys_content_t
    state: present
  when: item.repository.selinux_enable | default(false) | bool

- name: Apply SELinux context recursively
  community.general.command:
    argv:
      - restorecon
      - -Rv
      - "{{ item.repository.base_path }}/{{ item.repository.name }}"
  when: item.repository.selinux_enable | default(false) | bool
  changed_when: false

- name: Download package if not already present
  ansible.builtin.get_url:
    url: "{{ package_download_url }}"
    dest: "{{ item.repository.base_path }}/{{ item.repository.name }}/"
    mode: '0644'
    force: no

- name: Update repository metadata if package is RPM
  community.general.command:
    cmd: createrepo --update "{{ item.repository.base_path }}/{{ item.repository.name }}"
  when: item.source.ext == "rpm"
  changed_when: false
